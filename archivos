#include <iostream>
#include "conio.h"
#include <stdio.h>

using namespace std;

struct regAmigo{
	char nombre[30];
	int  edad;
	char sexo;
	char estado;
};


void crearArchivo(char nomArch[]){
	FILE *ptr;
	ptr= fopen(nomArch,"wb");
	fclose(ptr);
}
void adicionarRegistro (){
	FILE *ptr;
	regAmigo reg;

	cout<<"\tIngrese nombre:  ";
	do{
		gets(reg.nombre);
	}while(strlen(reg.nombre) == 0);

	do{
	cout<<"\tIngrese edad:   ";
	cin>> reg.edad;
	if (reg.edad < 1 || reg.edad > 100){
		cout<< "\tEdad Invalida, ingrese edad correcta"<<endl;
		cout<<endl;
	}
	}while(reg.edad < 1 || reg.edad > 100);
	
	do{
	cout<<"\tIngrese Sexo (F o M):   ";
	cin>> reg.sexo;
	}while(reg.sexo != 'F' && reg.sexo != 'M');

	reg.estado = 'A';

	ptr = fopen("amigos.dat","ab");
	fwrite(&reg, sizeof(reg),1,ptr);
	fclose(ptr);
	}
int contador (int n){
	int c=0;while (n>0){n = n/10;c++;}return (c);}
void mostrarArchivos (){
	FILE *ptr;
	regAmigo reg;
	int idCliente=3000,q,m,n,s;
	ptr=fopen("amigos.dat","rb");
	if(ptr!= NULL){
		cout<<endl;
			cout<<"---------------------------------------------------"<<endl;
			cout<<" |   Id   | NOMBRE                        |  EDAD   | SEXO | "<<endl;
		fread(&reg,sizeof(reg),1,ptr);
		while(feof(ptr)== false){
			idCliente++;
				cout<<" |  "<<idCliente<<"  |"<<reg.nombre;
				q=strlen(reg.nombre);
				m=30-q;
				for(int i=0;i<m;i++){
					cout<<" ";}
				cout<<" | "<<reg.edad;
				s=contador(reg.edad);
				n=8-s;
				for(int j=0;j<n;j++){
				cout<<" ";}
				cout<<"|  "<<reg.sexo<<"   |"<<endl;
			fread(&reg,sizeof(reg),1,ptr);
		}
cout<<"---------------------------------------------------"<<endl;
		fclose(ptr);
	}else{
		cout<<"no existe";
	}
}

	
void main (){
	//crearArchivo("amigos.dat");
	int op;
	cout<<"1. Adicionar"<<endl;
	cout<<"2. Mostrar "<<endl;
	cout<<"0. Salir"<<endl;
	cin>>op;

	switch(op){
	case 1:{
		adicionarRegistro ();
		   break;
		   }
	case 2:{
		mostrarArchivos ();
		   break;
		   }
	case 0:{
		   cout<<"salir"<<endl;
		   break;
		   }
	default:{
			cout<<"Valor invalido"<<endl;
			break;
			}
	}

		getch();
}
